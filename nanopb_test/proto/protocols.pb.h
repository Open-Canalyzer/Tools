/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7 at Fri Feb 24 13:36:24 2017. */

#ifndef PB_PROTOCOLS_PB_H_INCLUDED
#define PB_PROTOCOLS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Parameters {
    Parameters_ERROR = 0,
    Parameters_SET_MCR = 1,
    Parameters_SET_BTR = 2,
    Parameters_RUN = 3,
    Parameters_GET_SN = 4,
    Parameters_GET_FW = 5,
    Parameters_SET_LEDS = 6
} Parameters;
#define _Parameters_MIN Parameters_ERROR
#define _Parameters_MAX Parameters_SET_LEDS
#define _Parameters_ARRAYSIZE ((Parameters)(Parameters_SET_LEDS+1))

/* Struct definitions */
typedef struct _CanMessage {
    uint32_t TimeStamp;
    uint32_t Header;
    uint32_t ID;
    uint32_t Data1;
    uint32_t Data2;
/* @@protoc_insertion_point(struct:CanMessage) */
} CanMessage;

typedef struct _ControlMessage {
    Parameters Parameter;
    uint32_t Value;
/* @@protoc_insertion_point(struct:ControlMessage) */
} ControlMessage;

typedef struct _UsbMessage {
    pb_size_t which_payload;
    union {
        ControlMessage ControlMsg;
        CanMessage CanMsg;
    } payload;
/* @@protoc_insertion_point(struct:UsbMessage) */
} UsbMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define CanMessage_init_default                  {0, 0, 0, 0, 0}
#define ControlMessage_init_default              {(Parameters)0, 0}
#define UsbMessage_init_default                  {0, {ControlMessage_init_default}}
#define CanMessage_init_zero                     {0, 0, 0, 0, 0}
#define ControlMessage_init_zero                 {(Parameters)0, 0}
#define UsbMessage_init_zero                     {0, {ControlMessage_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define CanMessage_TimeStamp_tag                 1
#define CanMessage_Header_tag                    2
#define CanMessage_ID_tag                        3
#define CanMessage_Data1_tag                     4
#define CanMessage_Data2_tag                     5
#define ControlMessage_Parameter_tag             1
#define ControlMessage_Value_tag                 2
#define UsbMessage_ControlMsg_tag                1
#define UsbMessage_CanMsg_tag                    2

/* Struct field encoding specification for nanopb */
extern const pb_field_t CanMessage_fields[6];
extern const pb_field_t ControlMessage_fields[3];
extern const pb_field_t UsbMessage_fields[3];

/* Maximum encoded size of messages (where known) */
#define CanMessage_size                          30
#define ControlMessage_size                      8
#define UsbMessage_size                          32

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define PROTOCOLS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
